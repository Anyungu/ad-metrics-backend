version: "3.9"
services:
  ad-insight-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: ad-insight-service
    container_name: ad-insight-service
    ports:
      - "8081:8080"
    depends_on:
      - redis
    env_file:
      - .env.docker
    restart: always
    networks:
      - app-network
  data-process-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: data-process-service
    container_name: data-process-service
    ports:
      - "8082:8080"
    depends_on:
      - redis
    env_file:
      - .env.docker
    restart: always
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - alertmanager
    networks:
      - app-network

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - "9093:9093"
    depends_on:
      - data-process-service
    networks:
      - app-network


  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - prometheus
    networks:
      - app-network

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - app-network
    volumes:
      - redis-data:/data

volumes:
  redis-data:
    driver: local

networks:
  app-network:
    driver: bridge
